worker_processes 1;

error_log /dev/stderr warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

env SECRET;

http {
    include mime.types;

    access_log /dev/stdout;

    proxy_cache_path /var/cache/nginx inactive=5s levels=2:2 keys_zone=cached:1m;
    lua_shared_dict locks 1m;

    init_by_lua_block {
        magick = require 'magick'
    }

    server {
        listen 80;

        set_by_lua_block $SECRET {
            return os.getenv('SECRET')
        }

        location / {
            proxy_pass http://127.0.0.1/resize/;
            proxy_cache cached;
            proxy_cache_key $uri;
            proxy_cache_methods GET;
            proxy_cache_valid 200 5s;
            # # proxy lock causes a 500ms delay, so we use another method with higher polling rate
            # proxy_cache_lock on;
            # proxy_cache_lock_age 5s;
            # proxy_cache_lock_timeout 5s;
        }

        location ~ ^/resize(?P<return_uri>/(?P<width>\d+)x(?P<height>\d+)(?P<path>(?:/\w+)+)\.(?P<sign>[-_\w]+)\.(?P<format>jpg|png))$ {
            secure_link $sign;
            secure_link_md5 "$width$height$path$format$SECRET";

            if ($secure_link = "") {
                return 403;
            }

            set $full_path "/var/www/uploaded$path";

            if (!-f $full_path) {
                return 404;
            }

            error_page 500 = @fallback;

            content_by_lua_file conf/resize.lua;
        }

        location @fallback {
          rewrite \.(\w+)$ "/fallback.$1" break;
        }
    }
}
